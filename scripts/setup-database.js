import mongoose from 'mongoose';
import bcrypt from 'bcryptjs';
import dotenv from 'dotenv';
import User from '../src/models/User.js';
import Post from '../src/models/Post.js';
import Comment from '../src/models/Comment.js';
import StrategicNote from '../src/models/StrategicNote.js';
import logger from '../src/utils/logger.js';

dotenv.config();

async function setupDatabase() {
    try {
        logger.info('üîß Iniciando setup do banco de dados...');

        // Conectar ao MongoDB
        await mongoose.connect(process.env.MONGODB_URI);
        logger.success('‚úÖ Conectado ao MongoDB');

        // Limpar dados existentes
        await User.deleteMany({});
        await Post.deleteMany({});
        await Comment.deleteMany({});
        await StrategicNote.deleteMany({});
        logger.info('üßπ Dados anteriores limpos');

        // Criar usu√°rio admin
        const hashedPassword = await bcrypt.hash('admin123', 10);
        const admin = await User.create({
            username: 'admin',
            email: 'admin@matriz.local',
            password: hashedPassword,
            role: 'admin'
        });
        logger.success('üë§ Usu√°rio admin criado');

        // Criar usu√°rio normal
        const user = await User.create({
            username: 'user',
            email: 'user@matriz.local',
            password: hashedPassword,
            role: 'user'
        });
        logger.success('üë§ Usu√°rio normal criado');

        // Criar posts de exemplo
        const posts = [];
        const postData = [
            {
                title: 'Bem-vindo √† Matriz',
                content: 'Este √© o primeiro post da plataforma Matriz. Aqui voc√™ encontrar√° reflex√µes sobre tecnologia, sociedade e inova√ß√£o.',
                tags: ['bem-vindo', 'matriz', 'tecnologia']
            },
            {
                title: 'Pensamento Cr√≠tico na Era Digital',
                content: 'Como desenvolver o pensamento cr√≠tico em um mundo cada vez mais digital e conectado.',
                tags: ['pensamento-critico', 'digital', 'filosofia']
            },
            {
                title: 'Construindo um Segundo C√©rebro',
                content: 'T√©cnicas e ferramentas para organizar conhecimento e construir um sistema de pensamento eficiente.',
                tags: ['segundo-cerebro', 'produtividade', 'organizacao']
            }
        ];

        for (const data of postData) {
            const post = await Post.create({
                authorId: admin._id,
                title: data.title,
                slug: data.title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, ''),
                content: data.content,
                tags: data.tags,
                published: true
            });
            posts.push(post);
            logger.success(`üìù Post "${data.title}" criado`);
        }

        // Criar coment√°rios de exemplo
        const commentData = [
            'Excelente post! Muito √∫til para come√ßar.',
            'Concordo com os pontos levantados.',
            'Vou implementar essas ideias no meu dia a dia.',
            'Interessante perspectiva sobre o tema.'
        ];

        for (let i = 0; i < commentData.length; i++) {
            const post = posts[i % posts.length];
            const author = i % 2 === 0 ? admin : user;

            await Comment.create({
                postId: post._id,
                authorId: author._id,
                content: commentData[i]
            });
            logger.success(`üí¨ Coment√°rio ${i + 1} criado`);
        }

        // Criar notas estrat√©gicas de exemplo
        const strategicNotesData = [
            {
                title: 'Estrat√©gia de Conte√∫do - Matriz 2025',
                content: 'Plano estrat√©gico completo para crescimento da plataforma Matriz em 2025, focando em qualidade de conte√∫do e engajamento da comunidade.',
                targetAudience: 'Desenvolvedores, pensadores cr√≠ticos e entusiastas de tecnologia',
                location: 'Digital/Global',
                objectives: [
                    'Crescer base de usu√°rios em 300%',
                    'Aumentar engajamento em 150%',
                    'Lan√ßar 2 funcionalidades principais',
                    'Estabelecer parcerias estrat√©gicas'
                ],
                pillars: [
                    {
                        name: 'Conte√∫do de Qualidade',
                        description: 'Foco em artigos t√©cnicos e reflex√µes profundas',
                        format: 'Posts longos, tutoriais, an√°lises',
                        frequency: 'Semanal'
                    },
                    {
                        name: 'Comunidade Ativa',
                        description: 'Estimular discuss√µes e networking',
                        format: 'Coment√°rios, debates, eventos',
                        frequency: 'Cont√≠nuo'
                    }
                ],
                contentSchedule: [
                    {
                        day: 'Segunda',
                        format: 'Artigo t√©cnico',
                        pattern: 'Deep dive em tecnologias emergentes',
                        cta: 'Compartilhe sua experi√™ncia'
                    },
                    {
                        day: 'Quinta',
                        format: 'Reflex√£o filos√≥fica',
                        pattern: 'Pensamento cr√≠tico sobre sociedade e tecnologia',
                        cta: 'Participe da discuss√£o'
                    }
                ],
                status: 'active',
                tags: ['estrat√©gia', 'crescimento', '2025', 'matriz']
            },
            {
                title: 'Roadmap T√©cnico - Plataforma Matriz',
                content: 'Planejamento t√©cnico para implementa√ß√£o de novas funcionalidades e melhorias na infraestrutura da plataforma.',
                targetAudience: 'Equipe de desenvolvimento e colaboradores t√©cnicos',
                location: 'Reposit√≥rio/Desenvolvimento',
                objectives: [
                    'Implementar sistema de notifica√ß√µes',
                    'Adicionar busca avan√ßada',
                    'Otimizar performance do frontend',
                    'Melhorar sistema de cache'
                ],
                pillars: [
                    {
                        name: 'Performance',
                        description: 'Otimiza√ß√µes de velocidade e responsividade',
                        format: 'Refatora√ß√µes, caching, otimiza√ß√µes',
                        frequency: 'Sprint-based'
                    },
                    {
                        name: 'Funcionalidades',
                        description: 'Novas features para usu√°rios',
                        format: 'APIs, interfaces, integra√ß√µes',
                        frequency: 'Mensal'
                    }
                ],
                contentSchedule: [
                    {
                        day: 'Sprint Planning',
                        format: 'Prioriza√ß√£o de tasks',
                        pattern: 'An√°lise de impacto vs esfor√ßo',
                        cta: 'Review de c√≥digo'
                    }
                ],
                status: 'active',
                tags: ['t√©cnico', 'roadmap', 'desenvolvimento', 'features']
            }
        ];

        for (const noteData of strategicNotesData) {
            await StrategicNote.create({
                authorId: admin._id,
                ...noteData
            });
            logger.success(`üìã Nota estrat√©gica "${noteData.title}" criada`);
        }

        logger.success('üéâ Setup do banco de dados conclu√≠do!');
        logger.info('üìä Resumo:');
        logger.info(`   - ${await User.countDocuments()} usu√°rios`);
        logger.info(`   - ${await Post.countDocuments()} posts`);
        logger.info(`   - ${await Comment.countDocuments()} coment√°rios`);
        logger.info(`   - ${await StrategicNote.countDocuments()} notas estrat√©gicas`);

        // Credenciais de acesso
        logger.info('üîê Credenciais de acesso:');
        logger.info('   Admin: admin@matriz.local / admin123');
        logger.info('   User: user@matriz.local / admin123');

    } catch (error) {
        logger.error('‚ùå Erro durante setup:', error);
        throw error;
    } finally {
        await mongoose.disconnect();
        logger.info('‚úÖ Desconectado do MongoDB');
        process.exit(0);
    }
}

setupDatabase(); 